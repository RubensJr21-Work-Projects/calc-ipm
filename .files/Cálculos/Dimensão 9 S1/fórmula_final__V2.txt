Cálculo da dimensão S1:
=BYROW(
    QUERY(Tabela_1[Submission_uuid]; "SELECT Col1 where Col1 is not NULL");
    LAMBDA(
        cell;
        LET(
            CORRESPONDENCIA_EXATA; 0;
            Dt_Coleta; ÍNDICE(Tabela_1[DATA DE APLICAÇÃO]; CORRESP(cell; Tabela_1[Submission_uuid]; CORRESPONDENCIA_EXATA));
            opt_Ebia1; ÍNDICE(DB_Familias[opt_Ebia1]; CORRESP(cell; DB_Familias[_uuid]; CORRESPONDENCIA_EXATA));

            moradores_x_condicao; BYROW(
                                    QUERY(DB_Membros; "SELECT D, H, I, J, K, L where A = '" & cell & "'");
                                    LAMBDA(
                                        row;
                                        LET(
                                            dt_Nascimento; ÍNDICE(row; 1; 1);
                                            idade; DATA_DIF_ANY(
                                                Dt_Coleta;
                                                dt_Nascimento;
                                                "Y"
                                            );
                                            bool_vacinas; ÍNDICE(row; 1; 2);
                                            opt_doencas; ÍNDICE(row; 1; 3);
                                            bool_acomp_SUS; ÍNDICE(row; 1; 4);
                                            opt_Deficiencias; ÍNDICE(row; 1; 5);
                                            opt_tec_assistiva; ÍNDICE(row; 1; 6);

                                            OU(
                                                Não(opt_doencas = "");
                                                E(
                                                    E(1 <= idade; idade < 18);
                                                    bool_vacinas = "N"
                                                );
                                                E(
                                                    Não(opt_Deficiencias = "");
                                                    opt_tec_assistiva = "V"
                                                )
                                            )
                                        )
                                    )
                                );
            existe_gravida_sem_pre_natal; opt_Ebia1 = "N";
            existe_morador_com_outras_condicoes; REDUCE(
                                                    TRUE;
                                                    moradores_x_condicao;
                                                    LAMBDA(
                                                        acumulador;
                                                        valor;
                                                        E(acumulador; valor)
                                                    )
                                                );
            retorno; SE(
                OU(
                    existe_gravida_sem_pre_natal;
                    existe_morador_com_outras_condicoes
                );
                ,2;
                0
            );

            retorno
        )
    )
)